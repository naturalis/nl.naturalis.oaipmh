//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.16 at 11:51:40 AM CET 
//


package nl.naturalis.oaipmh.api.jaxb.abcd;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RankAbbreviation.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="RankAbbreviation">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}Name">
 *     &lt;enumeration value="subgen."/>
 *     &lt;enumeration value="sect."/>
 *     &lt;enumeration value="subsp."/>
 *     &lt;enumeration value="var."/>
 *     &lt;enumeration value="subvar."/>
 *     &lt;enumeration value="forma"/>
 *     &lt;enumeration value="f."/>
 *     &lt;enumeration value="subforma"/>
 *     &lt;enumeration value="subf."/>
 *     &lt;enumeration value="f.spec."/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "RankAbbreviation")
@XmlEnum
public enum RankAbbreviation {

    @XmlEnumValue("subgen.")
    SUBGEN("subgen."),
    @XmlEnumValue("sect.")
    SECT("sect."),
    @XmlEnumValue("subsp.")
    SUBSP("subsp."),
    @XmlEnumValue("var.")
    VAR("var."),
    @XmlEnumValue("subvar.")
    SUBVAR("subvar."),
    @XmlEnumValue("forma")
    FORMA("forma"),
    @XmlEnumValue("f.")
    F("f."),
    @XmlEnumValue("subforma")
    SUBFORMA("subforma"),
    @XmlEnumValue("subf.")
    SUBF("subf."),
    @XmlEnumValue("f.spec.")
    F_SPEC("f.spec.");
    private final String value;

    RankAbbreviation(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RankAbbreviation fromValue(String v) {
        for (RankAbbreviation c: RankAbbreviation.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
