<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:if="ant:if"
         xmlns:unless="ant:unless"
         basedir="."
         name="common">

	<property file="build.properties" />

	<!-- Prefix for environment variables -->
	<property environment="env" />

	<!-- Configure Ivy. Only required for ant builds within Eclipse. -->
	<path id="ivy.lib.path">
		<fileset dir="${env.IVY_HOME}" includes="**/*.jar" />
	</path>
	<taskdef resource="org/apache/ivy/ant/antlib.xml"
	         uri="antlib:org.apache.ivy.ant"
	         classpathref="ivy.lib.path" />

	<property name="javac.source" value="1.7" />
	<property name="javac.target" value="1.7" />
	<property name="javac.debug" value="source,lines,vars" />

	<property name="home" location="${basedir}/../" />
	
	<!-- ===============[ TASKS ]=============== -->

	<target name="git-info" description="Retrieve current git branch, tag and commit">
		<exec executable="git" outputproperty="git.commit" failifexecutionfails="true">
			<arg value="rev-parse" />
			<arg value="--verify" />
			<arg value="HEAD" />
		</exec>
		<exec executable="git" outputproperty="git.tag" failifexecutionfails="true">
			<arg value="describe" />
			<arg value="--tags" />
			<arg value="--abbrev=0" />
		</exec>
		<exec executable="git" outputproperty="git.branch" failifexecutionfails="true">
			<arg value="rev-parse" />
			<arg value="--abbrev-ref" />
			<arg value="HEAD" />
		</exec>
		<echo message="branch=${git.branch};tag=${git.tag};commit=${git.commit}" />
		<property name="got-git-info" value="true" />
	</target>

	<target name="clean">
		<echo message="Performing cleanup for ${ant.project.name}" />
		<available file="build" type="dir" property="build.dir.exists" />
		<delete includeemptydirs="true" if:set="build.dir.exists">
			<fileset dir="build" includes="**/*" />
		</delete>
		<mkdir dir="build" />
		<mkdir dir="build/main" />
		<mkdir dir="build/test" />
		<mkdir dir="build/classpath" />
	</target>

	<target name="resources">
		<echo message="Copying non-Java resources to build directories" />
		<copy includeemptydirs="false" todir="build/main">
			<fileset dir="src/main/java">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="build/main">
			<fileset dir="src/main/resources">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="build/test">
			<fileset dir="src/test/java">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="build/test">
			<fileset dir="src/test/resources">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="resolve">
		<echo message="Resolving dependencies for ${ant.project.name}" />
		<ivy:resolve />
	</target>

	<target name="compile-sources" depends="resources">
		<echo message="Collecting jar files" />
		<mkdir dir="build/classpath" />
		<echo message="Adding Ivy-managed dependencies to ${basedir}/build/classpath" />
		<ivy:retrieve pattern="build/classpath/[artifact]-[revision](-[classifier]).[ext]"
		              log="download-only" />
		<echo message="Adding external libraries to ${basedir}/build/classpath" />
		<copy todir="build/classpath">
			<path refid="non-ivy-dependencies" />
		</copy>
		<echo message="Adding libraries in ${basedir}/lib to ${basedir}/build/classpath" />
		<copy todir="build/classpath">
			<fileset dir="lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<echo message="Compiling classes for ${ant.project.name}" />
		<javac encoding="UTF8"
		       destdir="build/main"
		       debug="true"
		       debuglevel="${javac.debug}"
		       includeantruntime="false"
		       source="${javac.source}"
		       target="${javac.target}">
			<src path="src/main/java" />
			<classpath>
				<fileset dir="build/classpath">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- We rely on the compile-sources task to build our classpath -->
	<target name="compile-test-sources" depends="compile-sources">
		<!-- But for purity's sake add junit jar file ourselves -->
		<copy todir="build/classpath">
			<fileset dir="${build.module.location}/lib">
				<include name="**/junit*.jar" />
				<include name="**/hamcrest-core*.jar" />
			</fileset>
		</copy>
		<echo message="Compiling unit tests for ${ant.project.name}" />
		<javac encoding="UTF8"
		       destdir="build/test"
		       debug="true"
		       debuglevel="${javac.debug}"
		       includeantruntime="false"
		       source="${javac.source}"
		       target="${javac.target}">
			<src path="src/test/java" />
			<classpath>
				<fileset dir="build/classpath">
					<include name="**/*.jar" />
				</fileset>
				<!-- Required to include "main" Java classes in classpath -->
				<dirset dir="build/main" />
			</classpath>
		</javac>
	</target>

	<target name="test" depends="compile-test-sources">
		<echo message="Testing ${ant.project.name}" />
		<mkdir dir="${home}/nl.naturalis.nda.build/test-reports"/>
		<junit printsummary="yes" haltonfailure="yes">
			<sysproperty key="ndaConfDir" value="${nda.import.install.dir}/conf"/>
			<assertions>
				<enable />
			</assertions>
			<classpath>
				<fileset dir="build/classpath">
					<include name="**/*.jar" />
				</fileset>
				<dirset dir="build/main" />
				<dirset dir="build/test" />
			</classpath>
			<formatter type="plain" />
			<batchtest todir="${home}/nl.naturalis.nda.build/test-reports">
				<fileset dir="src/test/java">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="package" depends="test">
		<jar destfile="build/${ant.project.name}.jar" basedir="build/main" excludes="**/.git*" />
	</target>

</project>